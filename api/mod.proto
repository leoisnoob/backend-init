syntax = "proto3";
package api;
option go_package= "api";

import "google/api/annotations.proto";
import "google/validator/validator.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message PingReq {
    string msg = 1 [(validator.field) = {regex: "^[a-z]{2,6}$"}];
}

message PingResp {
    string i_msg = 1[json_name="i_msg"];
}

// -------------------------------用户----------------------------
// -------------------------------用户----------------------------

message CreateUserReq{
    // 用户名，最少4个字符， 字母数字下划线、横杠、点、@ example: richard@qq.com
    //
    // required
    string username = 1[(validator.field)={regex: "^[a-zA-Z0-9][a-zA-Z0-9\\-_@\\.]{3,20}$"}];
    // 是否是 root >1:yes, 0: no
    //
    // requied
    int32 is_root = 2 ;
  
    // 密码
    //
    // required
    string password =3 [(validator.field) ={string_not_empty: true}];
}

message CreateUserResp{
    User data=1;
}

message UpdateUserReq{
    // 数据库id
    string username = 1 [(validator.field) = {string_not_empty: true}];
    UpdateUserBody user =2;

}

message UpdateUserBody{
    // 密码
    //
    // 
    string password =1;
    // 新密码
    // 
    string new_password=2[(validator.field) = {string_not_empty: true}];
    //是否跳过
    int32 skip_passcheck = 3;
}

message UpdateUserResp{
    User data =1;
}


message DeleteUserReq{
    // 数据库id
    string username = 1 [(validator.field) = {string_not_empty: true}];
}

message LoginReq {
    // 用户名，最少4个字符， 字母数字下划线、横杠、点、@ example: richard@qq.com
    //
    // required
    string username = 1[(validator.field)={regex: "^[a-zA-Z0-9][a-zA-Z0-9\\-_@\\.]{3,20}$"}];
    // 密码
    //
    // required
    string password =4 [(validator.field) ={string_not_empty: true}];
}

message LoginResp{
    User data =1;
}

message LogoutReq{

}

message ListUsersReq{
}

message ListUsersResp{
    repeated User data =1;

}



message User{
    // 用户名
    string username =1;
    // 是否是管理员
    int32 is_root =2;
    // 最后登录时间
    string last_login =3;
    // 创建时间
    string created_time = 4;
    // id
    int32 id =5;
  
}

message SuccessResp{
  // success
  string msg = 1;
}
